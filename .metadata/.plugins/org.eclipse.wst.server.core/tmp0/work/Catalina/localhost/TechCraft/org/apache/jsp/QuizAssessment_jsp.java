/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.8
 * Generated at: 2024-05-17 19:19:10 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import org.hibernate.SessionFactory;
import org.hibernate.Session;
import org.hibernate.Transaction;
import org.hibernate.cfg.Configuration;
import org.hibernate.query.Query;
import techcraft.model.QuizAssessmentChallenge;
import java.util.List;

public final class QuizAssessment_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("org.hibernate.Transaction");
    _jspx_imports_classes.add("techcraft.model.QuizAssessmentChallenge");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("org.hibernate.SessionFactory");
    _jspx_imports_classes.add("org.hibernate.query.Query");
    _jspx_imports_classes.add("org.hibernate.Session");
    _jspx_imports_classes.add("org.hibernate.cfg.Configuration");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("    <html>\r\n");
      out.write("\r\n");
      out.write("    <head>\r\n");
      out.write("        <meta charset=\"UTF-8\">\r\n");
      out.write("        <title>TechCraft Learning Hub</title>\r\n");
      out.write("        <link rel=\"stylesheet\" href=\"index.css\" type=\"text/css\"> \r\n");
      out.write("        <script src=\"https://cdn.jsdelivr.net/npm/sweetalert2@11\"></script>\r\n");
      out.write("        <script src=\"sweetalert2.min.js\"></script>\r\n");
      out.write("        <link rel=\"stylesheet\" href=\"sweetalert2.min.css\">\r\n");
      out.write("    </head>\r\n");
      out.write("    \r\n");
      out.write("    <style>\r\n");
      out.write("    \r\n");
      out.write("    	.progress-bar {\r\n");
      out.write("		    width: 20px;\r\n");
      out.write("		    height: 20px;\r\n");
      out.write("		    margin-right: 20px; \r\n");
      out.write("		    margin-left: 20px;\r\n");
      out.write("		    border-radius: 50%;\r\n");
      out.write("		    border: 4px solid black;\r\n");
      out.write("		    border-top-color: #ffa200;\r\n");
      out.write("		    animation: spin 1s linear infinite;\r\n");
      out.write("		}\r\n");
      out.write("		 \r\n");
      out.write("		.hidden {\r\n");
      out.write("		    display: none;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		@keyframes spin {\r\n");
      out.write("		    0% { transform: rotate(0deg); }\r\n");
      out.write("		    100% { transform: rotate(360deg); }\r\n");
      out.write("		}\r\n");
      out.write("    		\r\n");
      out.write("    	body {\r\n");
      out.write("    		height: 100%;\r\n");
      out.write("    	}\r\n");
      out.write("    	\r\n");
      out.write("    	.dashboard-heading {\r\n");
      out.write("			margin: 10px 20px;\r\n");
      out.write("			letter-spacing: 1px;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		.dashboard-heading span {\r\n");
      out.write("			font-weight: bold;\r\n");
      out.write("			font-size: 25px;\r\n");
      out.write("			text-align: center;\r\n");
      out.write("			letter-spacing: 1px;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("			.counting {\r\n");
      out.write("                font-size: 40px;\r\n");
      out.write("                margin-top: 0px;\r\n");
      out.write("                font-weight: bold;\r\n");
      out.write("                letter-spacing: 2px;\r\n");
      out.write("                color: #002233;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            .timeRemaining {\r\n");
      out.write("                color: red;\r\n");
      out.write("                animation: zoomInOut 0.5s infinite alternate;\r\n");
      out.write("            }\r\n");
      out.write("    	\r\n");
      out.write("    	.roadmap-main {\r\n");
      out.write("			width: auto;\r\n");
      out.write("		    min-height: 580px;\r\n");
      out.write("		    padding: 0px 30px;\r\n");
      out.write("		    border-radius: 20px;\r\n");
      out.write("		    background-size: cover; \r\n");
      out.write("		    border: 2px solid #000; \r\n");
      out.write("		    background-image: url(\"./media/techback.jpg\"); \r\n");
      out.write("		    text-align: center;\r\n");
      out.write("		    letter-spacing: 1px;\r\n");
      out.write("		} \r\n");
      out.write("		\r\n");
      out.write("		@keyframes zoomInOut {\r\n");
      out.write("		    0% {\r\n");
      out.write("		        transform: scale(1);\r\n");
      out.write("		    }\r\n");
      out.write("		    100% {\r\n");
      out.write("		        transform: scale(1.05);\r\n");
      out.write("		    }\r\n");
      out.write("		}\r\n");
      out.write("				\r\n");
      out.write("		.roadmap-main fieldset {\r\n");
      out.write("	        letter-spacing: 1px;\r\n");
      out.write("	        border-radius: 20px;\r\n");
      out.write("	        margin: 30px 0px;\r\n");
      out.write("	        margin-top: 10px;\r\n");
      out.write("	        padding: 30px;\r\n");
      out.write("	        background-color: #002233;\r\n");
      out.write("	        font-weight: bold;\r\n");
      out.write("	        border: none; \r\n");
      out.write("	        height: auto; \r\n");
      out.write("	        width: auto; \r\n");
      out.write("	    }\r\n");
      out.write("	    \r\n");
      out.write("	    .question {   \r\n");
      out.write("			text-align: left;\r\n");
      out.write("			padding: 20px 0px;\r\n");
      out.write("			padding-bottom: 0px;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		.quiz-questions {\r\n");
      out.write("			width: auto; \r\n");
      out.write("			border: solid 2px #000;\r\n");
      out.write("			border-radius: 10px;\r\n");
      out.write("			background-color: white;\r\n");
      out.write("			margin: 10px;\r\n");
      out.write("			text-align: left;\r\n");
      out.write("			padding: 20px 40px;\r\n");
      out.write("			font-size: 13px;\r\n");
      out.write("			padding-bottom: 40px;\r\n");
      out.write("		}\r\n");
      out.write("		 \r\n");
      out.write("		.quiz-option {\r\n");
      out.write("			cursor: pointer;\r\n");
      out.write("			border: solid 2px #000;\r\n");
      out.write("			border-radius: 10px;\r\n");
      out.write("			padding: 10px;\r\n");
      out.write("			width: auto;\r\n");
      out.write("			margin: 10px 0px;\r\n");
      out.write("			align-items: center;\r\n");
      out.write("			justify-content: center;\r\n");
      out.write("			background-color: white;\r\n");
      out.write("			color: black;\r\n");
      out.write("			transition: transform 0.3s ease;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		.quiz-option label {\r\n");
      out.write("			cursor: pointer;\r\n");
      out.write("		}\r\n");
      out.write("		  \r\n");
      out.write("		.quiz-option:hover { \r\n");
      out.write("			border: solid 2px #0bbfff; \r\n");
      out.write("			transform: scale(1.01);\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		.selected {\r\n");
      out.write("            color: #fff;\r\n");
      out.write("            background-color: #002233; \r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        .Answer {\r\n");
      out.write("        	display: flex;\r\n");
      out.write("        	gap: 15px;  \r\n");
      out.write("			margin-bottom: 30px; \r\n");
      out.write("			align-items: center; \r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        .explanation { \r\n");
      out.write("        	font-weight: normal;\r\n");
      out.write("        	width: 100%;\r\n");
      out.write("        }\r\n");
      out.write("		\r\n");
      out.write("		.quiz-questions button {\r\n");
      out.write("			color: #fff;\r\n");
      out.write("		    cursor: pointer;  \r\n");
      out.write("		    letter-spacing: 1px;\r\n");
      out.write("		    background-color: #ffa200;\r\n");
      out.write("		    border: none;\r\n");
      out.write("		    padding: 15px 20px;\r\n");
      out.write("		    font-weight: bold;\r\n");
      out.write("		    margin: 10px 5px;  \r\n");
      out.write("		    border-radius: 10px;\r\n");
      out.write("		    font-size: 12px;\r\n");
      out.write("		    width: 180px; \r\n");
      out.write("		    transition: transform 0.3s ease;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		.quiz-questions button:hover { \r\n");
      out.write("			transform: scale(1.05);\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		button {\r\n");
      out.write("			color: #fff;\r\n");
      out.write("	        cursor: pointer;\r\n");
      out.write("	        font-weight: bold; \r\n");
      out.write("			border-radius: 10px;\r\n");
      out.write("	        background-color: #ffa200;\r\n");
      out.write("	        letter-spacing: 1px; \r\n");
      out.write("	        padding: 15px 40px;\r\n");
      out.write("	        margin: 10px; \r\n");
      out.write("	        font-size: 15px;\r\n");
      out.write("	        border: none;\r\n");
      out.write("	        transition: transform 0.3s ease;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		button:hover {\r\n");
      out.write("			color: #fff;\r\n");
      out.write("			transform: scale(1.1);   \r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		.submit-assessment-button {\r\n");
      out.write("			background-color: #00334d;\r\n");
      out.write("			margin: 20px; \r\n");
      out.write("			margin-bottom: 40px; \r\n");
      out.write("			padding: 20px 40px;\r\n");
      out.write("		}\r\n");
      out.write("		.submit-assessment-button:hover {\r\n");
      out.write("			background-color: #0bbfff;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		.submit-button-style {\r\n");
      out.write("			pointer-events: none; background-color: #0bbfff;\r\n");
      out.write("		}\r\n");
      out.write("    </style> \r\n");
      out.write("     \r\n");
      out.write("    <body>\r\n");
      out.write("    \r\n");
      out.write("    	");

	        String name = (String) session.getAttribute("name");
	        if (name == null) {
	            response.sendRedirect("index.jsp");
	        } else {
	    
      out.write("\r\n");
      out.write("  \r\n");
      out.write("        ");
 
        	String module = request.getParameter("module");
        	String topic = request.getParameter("topic");	        
        	String date = request.getParameter("date");
        	String time = request.getParameter("time"); 
        	String instructor = request.getParameter("instructor");
        	
        	System.out.println("Module: " + module);
        	System.out.println("Topic: " + topic);
        	System.out.println("Date: " + date);
        	System.out.println("Time: " + time); 
        
      out.write("\r\n");
      out.write("        \r\n");
      out.write("        <header style=\"justify-content:initial; letter-spacing: 1px; display: flex;\">\r\n");
      out.write("            <img src=\"./media/code-simple.png\" width=30px height=30px style=\"margin-left: 20px\">\r\n");
      out.write("            <h1>TechCraft</h1>\r\n");
      out.write("            <div class=\"vl\"></div> \r\n");
      out.write("            <div class=\"dashboard-heading\"> \r\n");
      out.write("        	<span style=\"color: white\"> ");
      out.print( module );
      out.write(" Assessments</span>\r\n");
      out.write("        	<img src=\"./media/user.png\" width=20px height=17px style=\"margin-right: 10px; margin-left: 630px\"> \r\n");
      out.write("        	<b style=\"color: #ffa200; font-size: 18px; \">");
      out.print( name );
      out.write("</b>\r\n");
      out.write("        </div> \r\n");
      out.write("        </header>\r\n");
      out.write("        <div style=\"width: 100%; height: 81px; background-color: #002233\"></div>\r\n");
      out.write("         \r\n");
      out.write("        <div class=\"roadmap-main\">\r\n");
      out.write("        	<div class=\"roadmap-heading\"><br>\r\n");
      out.write("        		<div style=\"display: flex; background-color: white; padding: 0px 30px; align-items: center; position: fixed; z-index: 1; width: 93%;\">    \r\n");
      out.write("	        		<div class=\"dashboard-heading\" style=\"margin: 10px 10px;\"> \r\n");
      out.write("		        		<span style=\"font-size: 15px; color: #888888\">topic:</span>\r\n");
      out.write("				        <span style=\"color: black; font-size: 25px;\">");
      out.print( topic );
      out.write("</span>\r\n");
      out.write("				    </div>\r\n");
      out.write("				    <span style=\"flex: 1\"></span>\r\n");
      out.write("				    <div id=\"timer-div\" style=\"display:flex; gap: 10px; text-align: center; align-items: center; font-size: 15px; margin-top: 0px; font-weight: bold; letter-spacing: 1px; color: #002233;\"> \r\n");
      out.write("	                    <input type=\"hidden\" id=\"time\" value=\"");
      out.print( time );
      out.write("\">\r\n");
      out.write("	                    <b > Time left : </b>\r\n");
      out.write("	                    <span class=\"counting\" id=\"timer\" style=\"font-size: 30px;\"></span>\r\n");
      out.write("	                    <audio id=\"myAudio\">\r\n");
      out.write("						  <source src=\"./media/warning.mp3\" type=\"audio/mpeg\"> \r\n");
      out.write("						</audio>\r\n");
      out.write("            		</div> \r\n");
      out.write("            	</div> \r\n");
      out.write("            	<div style=\"width: 100%; height: 50px; background-color: #fff\"></div>\r\n");
      out.write("        		<fieldset>\r\n");
      out.write("		             <div class=\"quiz-questions\">\r\n");
      out.write("						    ");
  
							    SessionFactory factory = new Configuration().configure().buildSessionFactory();
							    Session studentSession = factory.openSession(); 
							            
							    try { 
							    	 Query<QuizAssessmentChallenge> query = studentSession.createQuery("FROM QuizAssessmentChallenge where topic = :topic AND assignedDate =:assignedDate", QuizAssessmentChallenge.class);
									    query.setParameter("topic", topic);
									    query.setParameter("assignedDate", date);
									    List<QuizAssessmentChallenge> challenges = query.getResultList();
									 	
									    int totalQuestions = challenges.size();
									    
									    for (int i = 0; i < challenges.size(); i++) {
									    	QuizAssessmentChallenge quiz = challenges.get(i);
						    
      out.write("\r\n");
      out.write("						                <br><br><br>\r\n");
      out.write("						                <span>Question ");
      out.print( i+1 );
      out.write(" :</span> \r\n");
      out.write("						                <div class=\"question\">\r\n");
      out.write("						                    <b>");
      out.print( quiz.getQuestion() );
      out.write("</b>\r\n");
      out.write("						                    <input type=\"hidden\" name=\"question\">\r\n");
      out.write("						                    <br><br>\r\n");
      out.write("						                    <div class=\"quiz-option\" onclick=\"selectOption('");
      out.print( quiz.getCorrectOption() );
      out.write("', '");
      out.print( quiz.getOption1() );
      out.write("', 'q");
      out.print( i );
      out.write("-option-a', '");
      out.print( i );
      out.write("', this)\">\r\n");
      out.write("						                        <input type=\"radio\" id=\"q");
      out.print( i );
      out.write("-option-a\" name=\"q");
      out.print( i );
      out.write("\" value=\"");
      out.print( quiz.getOption1() );
      out.write("\"> \r\n");
      out.write("						                        <label for=\"q");
      out.print( i );
      out.write("-option-a\">A) ");
      out.print( quiz.getOption1() );
      out.write("</label>\r\n");
      out.write("						                    </div>\r\n");
      out.write("						                    <div class=\"quiz-option\" onclick=\"selectOption('");
      out.print( quiz.getCorrectOption() );
      out.write("', '");
      out.print( quiz.getOption2() );
      out.write("','q");
      out.print( i );
      out.write("-option-b', '");
      out.print( i );
      out.write("', this)\">\r\n");
      out.write("						                        <input type=\"radio\" id=\"q");
      out.print( i );
      out.write("-option-b\" name=\"q");
      out.print( i );
      out.write("\" value=\"");
      out.print( quiz.getOption2() );
      out.write("\"> \r\n");
      out.write("						                        <label for=\"q");
      out.print( i );
      out.write("-option-b\">B) ");
      out.print( quiz.getOption2() );
      out.write("</label>\r\n");
      out.write("						                    </div>\r\n");
      out.write("						                    <div class=\"quiz-option\" onclick=\"selectOption('");
      out.print( quiz.getCorrectOption() );
      out.write("', '");
      out.print( quiz.getOption3() );
      out.write("','q");
      out.print( i );
      out.write("-option-c', '");
      out.print( i );
      out.write("', this)\">\r\n");
      out.write("						                        <input type=\"radio\" id=\"q");
      out.print( i );
      out.write("-option-c\" name=\"q");
      out.print( i );
      out.write("\" value=\"");
      out.print( quiz.getOption3() );
      out.write("\"> \r\n");
      out.write("						                        <label for=\"q");
      out.print( i );
      out.write("-option-c\">C) ");
      out.print( quiz.getOption3() );
      out.write("</label>\r\n");
      out.write("						                    </div>\r\n");
      out.write("						                    <div class=\"quiz-option\" onclick=\"selectOption('");
      out.print( quiz.getCorrectOption() );
      out.write("', '");
      out.print( quiz.getOption4() );
      out.write("','q");
      out.print( i );
      out.write("-option-d', '");
      out.print( i );
      out.write("', this)\">\r\n");
      out.write("						                        <input type=\"radio\" id=\"q");
      out.print( i );
      out.write("-option-d\" name=\"q");
      out.print( i );
      out.write("\" value=\"");
      out.print( quiz.getOption4() );
      out.write("\"> \r\n");
      out.write("						                        <label for=\"q");
      out.print( i );
      out.write("-option-d\">D) ");
      out.print( quiz.getOption4() );
      out.write("</label>\r\n");
      out.write("						                    </div>\r\n");
      out.write("						                </div>\r\n");
      out.write("						                 \r\n");
      out.write("						    ");
 
						            }  
						        } 
						    	catch (Exception e) {  
						            e.printStackTrace();
						        } 
						    	finally {
						            studentSession.close();
						            factory.close();
						        }
						    
      out.write("\r\n");
      out.write("						</div>\r\n");
      out.write("		        </fieldset> \r\n");
      out.write("		        <div class=\"submit-assessment-div\">\r\n");
      out.write("		        	<form id=\"sumbit-challenge\"  action=\"SubmitAssessment\" method=\"post\"> \r\n");
      out.write("		                <input type=\"hidden\" name=\"name\" value=\"");
      out.print( name );
      out.write("\">\r\n");
      out.write("		                <input type=\"hidden\" name=\"module\" value=\"");
      out.print( module );
      out.write("\">\r\n");
      out.write("		                <input type=\"hidden\" name=\"topic\" id=\"topic\" value=\"");
      out.print( topic );
      out.write("\">\r\n");
      out.write("    					<input type=\"hidden\" name=\"date\" id=\"date\" value=\"");
      out.print( date );
      out.write("\">\r\n");
      out.write("    					<input type=\"hidden\" name=\"instructor\" value=\"");
      out.print( instructor );
      out.write("\">\r\n");
      out.write("    					<input type=\"hidden\" name=\"totalQuestions\" id=\"totalQuestion\">\r\n");
      out.write("    					<input type=\"hidden\" name=\"correctAnswers\" id=\"correctAnswers\">\r\n");
      out.write("		                <button class=\"submit-assessment-button\" type=\"button\" onclick=\"openModal('confirmation')\">Submit Assessment</button>\r\n");
      out.write("		            	<span>Note : Attempt all the Questions before submitting the assessment !</span>\r\n");
      out.write("		            </form>  \r\n");
      out.write("		        </div> \r\n");
      out.write("        	</div>\r\n");
      out.write("        </div>\r\n");
      out.write("        \r\n");
      out.write("        <div id=\"confirmation\" class=\"modal-container\">\r\n");
      out.write("            <!-- Modal content -->\r\n");
      out.write("            <div class=\"modal-content\" style=\"max-width: 350px;\">\r\n");
      out.write("                <form id=\"logoutForm\" action=\"StudentLogout\">\r\n");
      out.write("                    <p style=\"color: black\">Are you sure, you want Submit Assessment ?</p>\r\n");
      out.write("                    <div style=\"display: flex; gap: 10px; align-item: center\">\r\n");
      out.write("                        <input type=\"button\" class=\"login\" style=\"background-color: #ffa200; border: none\" value=\"Yes\"\r\n");
      out.write("                            onclick=\"submitAssessment()\">\r\n");
      out.write("                        <input type=\"button\" class=\"login\" style=\"background-color: #d2d2e0; border: none\" value=\"Cancel\"\r\n");
      out.write("                            onclick=\"closeModal('confirmation')\">\r\n");
      out.write("                    </div>\r\n");
      out.write("                </form>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("         \r\n");
      out.write("        <div id=\"logoutModal\" class=\"modal-container\">\r\n");
      out.write("            <!-- Modal content -->\r\n");
      out.write("            <div class=\"modal-content\" style=\"max-width: 300px;\">\r\n");
      out.write("                <form id=\"logoutForm\" action=\"StudentLogout\">\r\n");
      out.write("                    <p style=\"color: black\">Are you sure, you want to Logout ?</p>\r\n");
      out.write("                    <div style=\"display: flex; gap: 10px; align-item: center\">\r\n");
      out.write("                        <input type=\"button\" class=\"login\" style=\"background-color: #ffa200; border: none\" value=\"Yes\"\r\n");
      out.write("                            onclick=\"logOut()\">\r\n");
      out.write("                        <input type=\"button\" class=\"login\" style=\"background-color: #d2d2e0; border: none\" value=\"Cancel\"\r\n");
      out.write("                            onclick=\"closeModal('logoutModal')\">\r\n");
      out.write("                    </div>\r\n");
      out.write("                </form>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        \r\n");
      out.write("        <button onclick=\"scrollToTop()\" id=\"scrollBtn\" title=\"Go to top\"><img class=\"go-top\" alt=\"\" src=\"./media/play.png\"></button>\r\n");
      out.write("        \r\n");
      out.write("        <script>\r\n");
      out.write("        	let count = 0; \r\n");
      out.write("    		const answeredQuestions = {};\r\n");
      out.write("    		\r\n");
      out.write("    		var inputs = document.querySelectorAll('input[name=\"question\"]'); \r\n");
      out.write("    		console.log(\"Number of Challenges:\", inputs.length);\r\n");
      out.write("    		let totalQuestions = inputs.length;\r\n");
      out.write("    		document.getElementById(\"totalQuestion\").value = totalQuestions;\r\n");
      out.write("    		\r\n");
      out.write("	        function selectOption(correctAnswer, clickedOption, optionId, questionIndex, instance) { \r\n");
      out.write("	        	console.log(\"Correct Option = \"+correctAnswer);\r\n");
      out.write("	        	console.log(\"clicked Option = \"+clickedOption);\r\n");
      out.write("	        	instance.parentElement.querySelectorAll('.quiz-option').forEach(option => {\r\n");
      out.write("	                option.classList.remove('selected');\r\n");
      out.write("	            }); \r\n");
      out.write("	        	instance.classList.add('selected'); \r\n");
      out.write("	            document.getElementById(optionId).checked = true; \r\n");
      out.write("	            \r\n");
      out.write("	            if(clickedOption === correctAnswer) {\r\n");
      out.write("	            	if (!answeredQuestions[questionIndex]) { \r\n");
      out.write("        	            count++; \r\n");
      out.write("        	            answeredQuestions[questionIndex] = true;\r\n");
      out.write("        	        } \r\n");
      out.write("	            }\r\n");
      out.write("	            else {\r\n");
      out.write("            		if (answeredQuestions[questionIndex]) {\r\n");
      out.write("        	            count--; \r\n");
      out.write("        	            answeredQuestions[questionIndex] = false;\r\n");
      out.write("        	        }\r\n");
      out.write("            	}\r\n");
      out.write("	            console.log(\"Total correct answers:\", count);\r\n");
      out.write("	            document.getElementById(\"correctAnswers\").value = count;\r\n");
      out.write("	        }\r\n");
      out.write("	    </script> \r\n");
      out.write("        \r\n");
      out.write("        <script type=\"text/javascript\">\r\n");
      out.write("        	function submitAssessment() {\r\n");
      out.write("        		localStorage.removeItem('endTime');\r\n");
      out.write("        		\r\n");
      out.write("        		closeModal(\"confirmation\");\r\n");
      out.write("        		const Toast = Swal.mixin({\r\n");
      out.write("                    toast: true,\r\n");
      out.write("                    showConfirmButton: false,\r\n");
      out.write("                    timer: 2000,\r\n");
      out.write("                    timerProgressBar: true,\r\n");
      out.write("                    didOpen: (toast) => {\r\n");
      out.write("                        toast.onmouseenter = Swal.stopTimer;\r\n");
      out.write("                        toast.onmouseleave = Swal.resumeTimer;\r\n");
      out.write("                    } \r\n");
      out.write("                });\r\n");
      out.write("                Toast.fire({\r\n");
      out.write("                    icon: \"success\",\r\n");
      out.write("                    title: \"Submmiting Assessment ...\"\r\n");
      out.write("                });\r\n");
      out.write("                setTimeout(function() {  \r\n");
      out.write("                	document.getElementById(\"sumbit-challenge\").submit();\r\n");
      out.write("	            }, 2000);\r\n");
      out.write("			}\r\n");
      out.write("        </script>\r\n");
      out.write("        \r\n");
      out.write("        <script>\r\n");
      out.write("		    // Function to get or set the end time in local storage\r\n");
      out.write("		    function getSetEndTime(timeInSeconds) {\r\n");
      out.write("		        if (localStorage.getItem('endTime')) {\r\n");
      out.write("		            return parseInt(localStorage.getItem('endTime'));\r\n");
      out.write("		        } else {\r\n");
      out.write("		            var endTime = new Date().getTime() + (timeInSeconds * 1000);\r\n");
      out.write("		            localStorage.setItem('endTime', endTime.toString());\r\n");
      out.write("		            return endTime;\r\n");
      out.write("		        }\r\n");
      out.write("		    }\r\n");
      out.write("		\r\n");
      out.write("		    // Function to start the countdown timer\r\n");
      out.write("		    function startCountdown(timeInSeconds) { \r\n");
      out.write("		    	\r\n");
      out.write("		        var endTime = getSetEndTime(timeInSeconds);\r\n");
      out.write("		        console.log(\"endTime =\"+endTime);\r\n");
      out.write("		        var countdownInterval = setInterval(function () {\r\n");
      out.write("		            var currentTime = new Date().getTime();\r\n");
      out.write("		            var remainingTimeSeconds = Math.floor((endTime - currentTime) / 1000);\r\n");
      out.write("		            remainingTimeSeconds = Math.max(0, remainingTimeSeconds);\r\n");
      out.write("					\r\n");
      out.write("		         	// Assign remainingTimeSeconds to each input element\r\n");
      out.write("		            var inputs = document.querySelectorAll('input[name=\"time\"]');\r\n");
      out.write("		            for (var i = 0; i < inputs.length; i++) {\r\n");
      out.write("		                inputs[i].value = remainingTimeSeconds / 60;\r\n");
      out.write("		            }\r\n");
      out.write("		            \r\n");
      out.write("		            var hours = Math.floor(remainingTimeSeconds / 3600);\r\n");
      out.write("		            var minutes = Math.floor((remainingTimeSeconds % 3600) / 60);\r\n");
      out.write("		            var seconds = remainingTimeSeconds % 60;\r\n");
      out.write("		\r\n");
      out.write("		            minutes = String(minutes).padStart(2, '0');\r\n");
      out.write("		            seconds = String(seconds).padStart(2, '0');\r\n");
      out.write("		\r\n");
      out.write("		            var countdownDisplay = minutes + \":\" + seconds;\r\n");
      out.write("		            if (hours > 0) {\r\n");
      out.write("		                hours = String(hours).padStart(2, '0');\r\n");
      out.write("		                countdownDisplay = hours + \":\" + countdownDisplay;\r\n");
      out.write("		            }\r\n");
      out.write("		\r\n");
      out.write("		            document.getElementById(\"timer\").innerHTML = countdownDisplay;\r\n");
      out.write("		\r\n");
      out.write("		            if (remainingTimeSeconds <= 10) {\r\n");
      out.write("		                document.getElementById(\"timer\").classList.add(\"timeRemaining\");\r\n");
      out.write("		                document.getElementById(\"myAudio\").play();\r\n");
      out.write("		            }\r\n");
      out.write("		\r\n");
      out.write("		            if (remainingTimeSeconds <= 0) {\r\n");
      out.write("		                clearInterval(countdownInterval);\r\n");
      out.write("		                localStorage.removeItem('endTime'); // Remove the end time from local storage\r\n");
      out.write("		                handleTimerExpiration(); // Handle timer expiration\r\n");
      out.write("		            }\r\n");
      out.write("		        }, 1000);\r\n");
      out.write("		    }\r\n");
      out.write("		\r\n");
      out.write("		    function handleTimerExpiration() {\r\n");
      out.write("		    	localStorage.removeItem('endTime');\r\n");
      out.write("		    	\r\n");
      out.write("		        const Toast = Swal.mixin({\r\n");
      out.write("		            toast: true,\r\n");
      out.write("		            showConfirmButton: false,\r\n");
      out.write("		            timer: 2000,\r\n");
      out.write("		            timerProgressBar: true,\r\n");
      out.write("		            didOpen: (toast) => {\r\n");
      out.write("		                toast.onmouseenter = Swal.stopTimer;\r\n");
      out.write("		                toast.onmouseleave = Swal.resumeTimer;\r\n");
      out.write("		            }\r\n");
      out.write("		        });\r\n");
      out.write("		        Toast.fire({\r\n");
      out.write("		            icon: \"success\",\r\n");
      out.write("		            title: \"Submitting Assessment ...\"\r\n");
      out.write("		        });\r\n");
      out.write("		        setTimeout(function() {\r\n");
      out.write("		            document.getElementById(\"sumbit-challenge\").submit();\r\n");
      out.write("		        }, 2000);\r\n");
      out.write("		    }\r\n");
      out.write("		\r\n");
      out.write("		    // Start the countdown when the page loads\r\n");
      out.write("		    window.onload = function () {\r\n");
      out.write("		        const minutes = parseInt(document.getElementById(\"time\").value);\r\n");
      out.write("		        console.log(\"Minutes =\"+minutes);\r\n");
      out.write("		        var timeLimitSeconds = minutes * 60;\r\n");
      out.write("		        startCountdown(timeLimitSeconds);\r\n");
      out.write("		    };\r\n");
      out.write("		</script>\r\n");
      out.write("        \r\n");
      out.write("        <script type=\"text/javascript\">\r\n");
      out.write("	        function openModal(modalId) {\r\n");
      out.write("	            var modal = document.getElementById(modalId);\r\n");
      out.write("	            modal.style.display = 'block';\r\n");
      out.write("	        }\r\n");
      out.write("	\r\n");
      out.write("	        function closeModal(modalId) {\r\n");
      out.write("	            var modal = document.getElementById(modalId);\r\n");
      out.write("	            modal.style.display = 'none';\r\n");
      out.write("	        }  \r\n");
      out.write("	        \r\n");
      out.write("	        function logOut() {\r\n");
      out.write("                document.getElementById(\"logoutForm\").submit();\r\n");
      out.write("            }\r\n");
      out.write("        </script>\r\n");
      out.write("        \r\n");
      out.write("		<script type=\"text/javascript\"> \r\n");
      out.write("		var mybutton = document.getElementById(\"scrollBtn\"); \r\n");
      out.write("		window.onscroll = function() {scrollFunction()};\r\n");
      out.write("\r\n");
      out.write("		function scrollFunction() {\r\n");
      out.write("		  if (document.body.scrollTop > 30 || document.documentElement.scrollTop > 30) {\r\n");
      out.write("		    mybutton.style.display = \"block\";\r\n");
      out.write("		  } else {\r\n");
      out.write("		    mybutton.style.display = \"none\";\r\n");
      out.write("		  }\r\n");
      out.write("		} \r\n");
      out.write("		function scrollToTop() { \r\n");
      out.write("		  document.documentElement.scrollTop = 0; \r\n");
      out.write("		}\r\n");
      out.write("\r\n");
      out.write("		</script> \r\n");
      out.write("		<footer>\r\n");
      out.write("            <p>&copy; 2024 TechCraft Learning Hub. @ Harshal Wandhare</p>\r\n");
      out.write("        </footer>\r\n");
      out.write("		");
 } 
      out.write("\r\n");
      out.write("    </body>\r\n");
      out.write("    </html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
